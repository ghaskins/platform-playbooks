- name: Add Longhorn chart repo
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: "https://charts.longhorn.io"

- name: Create namespace
  kubernetes.core.k8s:
    state: present
    namespace: longhorn-system
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: longhorn-system

- name: Create S3 secrets
  when: s3_enabled
  kubernetes.core.k8s:
    state: present
    namespace: longhorn-system
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: s3-secrets
      stringData:
        AWS_ENDPOINTS: "{{ s3_endpoint }}"
        AWS_ACCESS_KEY_ID: "{{ s3_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ s3_secret_access_key }}"
        VIRTUAL_HOSTED_STYLE: "true"

- name: Install Longhorn
  kubernetes.core.helm:
    name: longhorn
    chart_ref: longhorn/longhorn
    chart_version: "{{ longhorn_version }}"
    release_namespace: longhorn-system
    wait: true
    values: "{{ lookup('template', 'chart-values.yml') | from_yaml }}"

- name: Create Snapshot Job
  kubernetes.core.k8s:
    state: present
    namespace: longhorn-system
    definition:
      apiVersion: longhorn.io/v1beta1
      kind: RecurringJob
      metadata:
        name: default-snapshot
      spec:
        cron: "{{ longhorn_snapshot_cron }}"
        task: "snapshot"
        groups:
          - default
        retain: "{{ longhorn_snapshot_retain }}"
        concurrency: "{{ longhorn_snapshot_concurrency }}"

- name: Create Backup Job
  when: s3_enabled
  kubernetes.core.k8s:
    state: present
    namespace: longhorn-system
    definition:
      apiVersion: longhorn.io/v1beta1
      kind: RecurringJob
      metadata:
        name: default-backup
      spec:
        cron: "{{ longhorn_backup_cron }}"
        task: "backup"
        groups:
          - default
        retain: "{{ longhorn_backup_retain }}"
        concurrency: "{{ longhorn_backup_concurrency }}"

- name: Create Encryption secrets
  kubernetes.core.k8s:
    state: present
    namespace: longhorn-system
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: longhorn-crypto
      stringData:
        CRYPTO_KEY_VALUE: "{{ longhorn_password }}"

- name: Create default storageclass
  kubernetes.core.k8s:
    state: present
    definition:
      kind: StorageClass
      apiVersion: storage.k8s.io/v1
      metadata:
        name: default
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
      provisioner: driver.longhorn.io
      allowVolumeExpansion: true
      reclaimPolicy: Delete
      volumeBindingMode: Immediate
      parameters:
        fsType: "xfs"
        numberOfReplicas: "{{ longhorn_storage_replicas | string }}"
        dataLocality: "best-effort"
        encrypted:  "{{ longhorn_encryption_enabled | string | lower | quote }}"
        csi.storage.k8s.io/provisioner-secret-name: "longhorn-crypto"
        csi.storage.k8s.io/provisioner-secret-namespace: "longhorn-system"
        csi.storage.k8s.io/node-publish-secret-name: "longhorn-crypto"
        csi.storage.k8s.io/node-publish-secret-namespace: "longhorn-system"
        csi.storage.k8s.io/node-stage-secret-name: "longhorn-crypto"
        csi.storage.k8s.io/node-stage-secret-namespace: "longhorn-system"
